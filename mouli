#!/bin/bash

usage(){
    echo "Usage : $1 [binaire] [binExemple] [fileInput] [options]"
    echo -e "\t - binaire : "
    echo -e "\t - binExemple : "
    echo -e "\t - fileInput : write line by line, formatted by input:arg"
    echo -e "\t - options :"
    echo -e "\t\t-v :Show diff "
    echo -e "\t\t-m [path] : Make Input File, default path if not renseigned"
    echo -e "\t\t-c: color mode"
    
}

get_opts(){
    local -a opts=()
    declare j
    j=0
    for i in $@;do
	if [ "${i:0:1}" == "-" ] ;then
	    opts[$j]=$i
	    let "j=$j+1"
	fi
    done
    echo ${opts[@]}
}	 
	 
check_opts(){
    declare j
    declare i
    j=0;
    for i in $@;do
	if [ $j -ne 0 ] && [ "$i" == "$1" ];then
	    return 1
	fi
	let "j=$j+1"
    done
    return 0
}

make_arg(){
    declare myRet
    declare line
    declare in arg
    i=0
    while read -r line
    do
	line=$(echo $line | cut -f1 -d#)
	if [ "${line:0:1}" != ">" ] && [ ! -z "$line" ];then
	    in=$(echo $line | cut -d: -f1)
	    arg=$(echo $line | cut -d: -f2)
	    pastEx="$bin"
	    cp $bin testa
	    $(echo -e $in | ./testa $arg 1> $dir"traceEM"$i 2> $dir"traceOM"$i)
	    myRet=$?
	    if [ "$myRet" == "139" ];then
		echo "SIGSEV"
	    fi
	    rm -rf testa
	    k=0
	    for t in $(echo $binEx | tr " " "\n");do
		if [ "$k" == "0" ]; then
		    binEx2=$t
		else
		    argEx[k]=$t		    
		fi
		let "k=1+$k"
	    done
	    cp $binEx2 testa
	    echo -e $in | ./testa ${argEx[*]} $arg 1> $dir"traceEE"$i 2> $dir"traceOE"$i
	    exRet=$?
	    rm -rf testa
	    if [ $exRet != $myRet ] && [ $myRet -ne 139 ]; then
		echo "BAD_RET($i)>$exRet:$myRet"
	    fi	
	elif [ "${line:0:1}" == ">" ]; then
	    echo "$line" > $dir"info"$i
	fi
	let "i=$i+1"
    done < "$fileI"
    return $i
}

color_diff(){
    #standard
    while read -r line;do
	if [ ${line:0:1} == "<" ];then
	    echo -e "${REDLC}$line${NOC}"
	elif [ ${line:0:1} == ">" ];then
	    echo -e "${GREENLC}$line${NOC}"
	else
	    echo -e "\033[0;36m$line${NOC}"
	fi
    done < $dir"traceOG"$1
    #error
    while read -r line;do
	if [ ${line:0:1} == "<" ];then
	    echo -e "${REDLC}$line${NOC}"
	elif [ ${line:0:1} == ">" ];then
	    echo -e "${GREENLC}$line${NOC}"
	else
	    echo -e "\033[0;36m$line${NOC}"
	fi
    done < $dir"traceEG"$1    
    echo $file;
}

no_color_diff(){
    cat $dir"traceOG"$1
    cat $dir"traceEG"$1
}

check_diff(){
    declare i tmpRetI myRet info
    i=0;
    while [ $i -lt $1 ]
    do
	if [ -f $dir"traceOM"$i ] && [ -f $dir"traceOE"$i ] &&
	   [ -f $dir"traceEM"$i ] && [ -f $dir"traceEE"$i ];then
	    $(diff $dir"traceOM"$i $dir"traceOE"$i > $dir"traceOG"$i)
	    tmpRetI=$?
	    $(diff $dir"traceEM"$i $dir"traceEE"$i > $dir"traceEG"$i)
	    myRet=$?
	    if [ "$myRet" == "1" ] || [ "$tmpRetI" == "1" ];then
		echo -e "${REDLC}KO${NOC}"
		check_opts "-v" $opts
		if [ "$?" == "1" ]; then
		    echo -e "${REDC}< your${NOC}, ${GREENLC}> ex${NOC}"
		    check_opts "-c" $opts
		    if [ $? -eq 1 ]; then
			color_diff $i
		    else
			no_color_diff $i
		    fi
		fi
	    else
		echo -e "${GREENC}OK${NOC}"
	    fi
	elif [ -f $dir"info"$i ];then
	    info=$(cat $dir"info"$i)
	    echo -e ${YELLC}${info:1}${NOC}
	fi
	let "i=$i+1"
    done
}

main(){
    declare -a opts=()
    if [ $# -lt 3 ];then
	usage $0
	exit
    fi
    opts=$(get_opts $@)
    check_opts "-m" $opts
    if [ "$?" == "1" ];then
	i=0;
	touch "$1"
	while [ $i -lt 4 ];do
	    echo -n "Input n°$i : "
	    read s
	    echo -n "$s:" >> "$1" 
	    echo -n "arg (can separate by \" \") n°$i : "
	    read s
	    echo $s >> "$1"
	    let "i=$i+1"
	done
	
	exit
    fi
    mkdir $dir
    make_arg
    check_diff $?
    rm -rf $dir
}

REDC='\033[0;31m'
REDLC='\033[1;31m'
GREENC='\033[0;32m'
GREENLC='\033[0;32m'
YELLC='\033[1;33m'
NOC='\033[0m'
bin="./$1"
binEx="$2"
fileI="$3"
dir="trace_mouli_test/"
option="$4"
path="DefaultMouliInput"

main $@
