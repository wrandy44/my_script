#!/bin/bash
## mouli.sh for azd in /home/debrau_c/bin
## 
## Made by Carl DEBRAUWERE
## Login   <debrau_c@epitech.net>
## 
## Started on  Thu Feb 16 23:06:34 2017 Carl DEBRAUWERE
## Last update Fri Feb 24 00:35:22 2017 debrau_c
##

usage(){
    echo "Usage : $1 [binaire] [binExemple] [fileInput] [options]"
    echo -e "\t - binaire : "
    echo -e "\t - binExemple : "
    echo -e "\t - fileInput : write line by line, formatted by input:arg"
    echo -e "\t - options :"
    echo -e "\t\t-v :Show diff "
    echo -e "\t\t-m [path] : Make Input File, default path if not renseigned"
    echo -e "\t\t-c: color mode"
    
}

get_opts(){
    local -a opts=()
    j=0
    for i in $@;do
	if [ "${i:0:1}" == "-" ] ;then
	    opts[$j]=$i
	    let "j=$j+1"
	fi
    done
    echo ${opts[@]}
}	 
	 
check_opts(){
    j=0;
    declare i
    for i in $@;do
	if [ $j -ne 0 ] && [ "$i" == "$1" ];then
	    return 1
	fi
	let "j=$j+1"
    done
    return 0
}

#to avoid error when av[0] spawm
modify_content(){
    fileE=$1
    fileM=$2
    fE=$(cat $fileE)
    toTest=${fE:0:${#binEx}}
    if [ "$toTest" == "$binEx" ];then
	
	rm -rf $fileE
	echo "${fE:${#binEx}}" > $fileE
    fi
    fM=$(cat $fileM)    
    toTestM=${fM:0:${#bin}}
    if [ "$toTestM" == "$bin" ];then
	rm -rf $fileM
	echo "${fM:${#bin}}" > $fileM
    fi
}




make_arg(){



    declare i=0
    for k in $(echo $binEx | tr ";" "\n")
    do
	if [ "$i" != "0" ]; then
	    argEx[$i]=$k
	fi
	let "i=$i+1"
    done
    i=0
    while read -r line
    do
	BinEx=$(echo $binEx | cut -d' ' -f1)
	in=$(echo $line | cut -d: -f1)
	arg=$(echo $line | cut -d: -f2)
	cp $bin testa
	$(echo -e "$in" | ./testa $arg 1> $dir"traceEM"$i 2> $dir"traceOM"$i)
	myRet=$?
	if [ "$myRet" == "139" ];then
	    echo "SIGSEV"
	fi
	rm -rf testa
	cp $BinEx testa
	echo "testa $argEx $arg"
	$(echo -e $in | ./testa  $arg 1> $dir"traceEE"$i 2> $dir"traceOE"$i)
	exRet=$?
	rm -rf testa
	if [ $exRet != $myRet ] && [ $myRet -ne 139 ]; then
	    echo "BAD_RET($i)>$exRet:$myRet"
	fi	
	let "i=$i+1"
    done < "$fileI"
    return $i
}

color_diff(){
    #standard
    while read -r line;do
	if [ ${line:0:1} == "<" ];then
	    echo -e "${REDLC}$line${NOC}"
	elif [ ${line:0:1} == ">" ];then
	    echo -e "${GREENLC}$line${NOC}"
	else
	    echo -e "\033[0;36m$line${NOC}"
	fi
    done < $dir"traceOG"$1
#error
    while read -r line;do
	if [ ${line:0:1} == "<" ];then
	    echo -e "${REDLC}$line${NOC}"
	elif [ ${line:0:1} == ">" ];then
	    echo -e "${GREENLC}$line${NOC}"
	else
	    echo -e "\033[0;36m$line${NOC}"
	fi
    done < $dir"traceEG"$1

    
    echo $file;
}

no_color_diff(){
    cat $dir"traceOG"$1
    cat $dir"traceEG"$1
}

check_diff(){
    local i=0;
    while [ $i -lt $1 ]
    do
	diff $dir"traceOM"$i $dir"traceOE"$i > $dir"traceOG"$i && diff $dir"traceEM"$i $dir"traceEE"$i > $dir"traceEG"$i
	if [ "$?" -ne "0" ];then
	    echo -e "${REDLC}KO${NOC}"
	    check_opts "-v" $opts
	    if [ "$?" == "1" ]; then
		echo -e "${REDC}< your${NOC}, ${GREENLC}> ex${NOC}"
		check_opts "-c" $opts
		if [ $? -eq 1 ]; then
		    color_diff $i
		else
		    no_color_diff $i
		fi
	    fi
	else
	    echo -e "${GREENC}OK${NOC}"
	    cat $dir"traceOG"$i
	    cat $dir"traceEG"$i
	fi
	
	let "i=$i+1"
    done
    
}

main(){
    declare -a opts=()
    if [ $# -lt 3 ];then
	usage $0
	exit
    fi
    opts=$(get_opts $@)
    check_opts "-m" $opts
    if [ "$?" == "1" ];then
	i=0;
	touch "$1"
	while [ $i -lt 4 ];do
	    echo -n "Input n°$i : "
	    read s
	    echo -n "$s:" >> "$1" 
	    echo -n "arg (can separate by \" \") n°$i : "
	    read s
	    echo $s >> "$1"
	    let "i=$i+1"
	done
	
	exit
    fi
    mkdir $dir
    make_arg
    check_diff $?
    rm -rf $dir
}

REDC='\033[0;31m'
REDLC='\033[1;31m'
GREENC='\033[0;32m'
GREENLC='\033[0;32m'
NOC='\033[0m'
bin="./$1"
binEx="$2"
fileI="$3"
dir="trace_mouli_test/"
option="$4"
path="DefaultMouliInput"

main $@
